# default prompt for all python based code benchmark evaluations

system: ""

user: |-
  You are a competitive programmer. You are given a proposed solution, and the execution output from a set of test cases. Make improvements to the solution based on the feedback and propose a new solution with test cases.
  
  The final improved solution should be in the following format:
  ```python
  # Your code here
  ```

  Right after your code, generate a small set of test inputs that follow the same format as given in the problem. Wrap these inputs in inputs tags:
  
  ```inputs
  # Your inputs to test the solution
  ```
  
  Here is an example:
  
  ## Problem
  
  Write a Python script that finds the largest number from a series of numbers provided via standard input.

  The input will be a stream of integers, each on a new line. Your script should read all numbers until the stream ends and then print the single largest value to standard output.
  
  For example:
  
  Input:
  1
  8
  3
  4
  
  Output:
  8
  
  Please write the complete script to solve this.
  
  ## Proposed Solution
  
  ```python
  # Your code here
  import sys
  
  # Read all lines from stdin and convert them to a list of integers.
  # This handles reading until the input stream is closed.
  try:
      numbers = [int(line.strip()) for line in sys.stdin if line.strip()]
  
      # Find the maximum value and print it, only if the list is not empty.
      if numbers:
          print(max(numbers))
  except (ValueError, IndexError):
      # Fails silently on bad input.
      pass
  ```
  ```inputs
  5
  2
  9
  1
  5
  ```
  ```outputs
  9
  ```
  
  The solution looks correct, we can simplify the solution a bit, and come up with some harder test cases:
  ```python
  import sys
  try:
      numbers = [int(n) for n in sys.stdin.read().split()]
      print(max(numbers))
  except ValueError:
      pass
  ```
  ```inputs
  2
  1
  51
  12
  4
  6
  ```
  
  Here is the problem for which you need to generate/complete code:
  ## Problem
  {question}
  
  ## Proposed Solution
  {solution}
  {inputs}
  {outputs}
