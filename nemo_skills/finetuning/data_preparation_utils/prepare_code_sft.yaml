processors_to_run: all

preprocessed_dataset_files: null  # can specify multiple patters separated by space
prediction_jsonl_files: null  # can specify datasets from HF instead of prediction_jsonl_files
output_path: ???

metadata: null  # can provide additional metadata to store (e.g. dataset or generation_type)
skip_first: 0  # useful for skipping validation set from train_full generation (it's always first)
add_correct: true  # can set to False if only want to export incorrect solutions
add_incorrect: false  # if True, saves only incorrect solutions instead of correct

downsampling_method: null  # fair, random or null
random_seed: 42
do_shuffle: true
num_output_samples: null

prompt_type: openmathinstruct/sft
chat_format: false  # whether to use NeMo's chat format

filters:
  question_key: input  # key to group samples by before code_text_filter
  solution_key: output  # key to filter solutions by

processors:
  - _target_: nemo_skills.finetuning.data_preparation_utils.preprocessing.ReadData
    preprocessed_dataset_files: ${preprocessed_dataset_files}
    prediction_jsonl_files: ${prediction_jsonl_files}
    question_key: ${filters.question_key}
    solution_key: ${filters.solution_key}
    skip_first: ${skip_first}
    add_correct: ${add_correct}
    add_incorrect: ${add_incorrect}

  - _target_: nemo_skills.finetuning.data_preparation_utils.preprocessing.GroupSamples
    group_key: ${filters.solution_key}

  - _target_: nemo_skills.finetuning.data_preparation_utils.preprocessing.ShuffleAndDownsampleData
    num_samples: ${num_output_samples}
    sampling_method: ${downsampling_method}
    question_key: ${filters.question_key}
    solution_key: ${filters.solution_key}
    random_seed: ${random_seed}
    do_shuffle: ${do_shuffle}

  - _target_: nemo_skills.finetuning.data_preparation_utils.preprocessing.WriteFinalSftManifest
    output_manifest_file: ${output_path}
    prompt_type: ${prompt_type}
    question_key: ${filters.question_key}
    solution_key: ${filters.solution_key}
    chat_format: ${chat_format}
    metadata: ${metadata}
